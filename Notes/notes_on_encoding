Author: Gyri
Date: 27.06.2019


#####################################################
######## QEI - Quadratic Encoder Interface ##########
#####################################################

The encoders are suitable for monitoring and regulating the speed, position and direction of the rotation of the drive shaft. The DC-motors have an optical encoder with two output channels, A and B. A code wheel on the shafts is optically captured and further processed. At the encoder outputs two 90deg phase shifted rectangular signals are available with 16 impulses per motor revolution. 

It has two channels at pin 5 (channel A) and 6 (channel B) on the motor connector. The encoders also needs a ground in pin 3 and Udd reference of 3.3V in pin 4 in order to work. The reason it is 3.3 is to make the digital signal readable for the micro controller.

For our micro controller dsPIC33FJ128MC804:
Flexible trigger for ADC conversions and configurations of the PWM for motor control. The micro controller does most of the work for directions A needs to have its edge first and for the opposite the B channel has to have its edge first. There is a 16 lines per revolution, which means that it has 16x4 (two edges for two channels) per revolution. That means that if the controller finds 16x4 lines it has done one revolution. 

It is an option to add noise filters to the encoders, but we decided not to as the accuracy doesn't need to be very high.

For more information about the QEI:
See chapter 7 in the documentation: Quadrature Encoder Interface (QEI), and http://ww1.microchip.com/downloads/en/DeviceDoc/70208C.pdf

##### Mapping of the pins #####

On the data sheet that we have the two channels are called M1_A and M1_B for the two channels respectively and for the two motors. The encoder outputs are directly connected with the microcontroller through this schematic:
M1_A = pin 4 - RP24/CN20/PMA5/RC8 - pin RP24
M1_B = pin 5 - RP25/CN19/PMA6/RC9 - pin RP25

M2_A = pin 11 - PWM1L2/DAC1RN/RP13/CN13/PMRD/RB13 pin RP13
M2_B = pin 10 - PWM1H2/DAC1RP/RP12/CN14/PMD0/RB12 pin RP12

On our micro controller:
1. checked the Family Reference Manual (FRM) section on peripherals 
2. defined the configuration bits QE(A/B)(1/2) to the registers RPINR14 and 16, for R<4:0>
3. set the pins to digital mode (by default) in GPIO
4. making sure that the oscillator is working as it should
5. decided to map the pins with the available pins of the mc
ex. RPINR14bits.QEB1R = 00010 (channel B  of motor 1 is set to pin RP2 aka pin 6 on the microchip)

QEA1
QEB1

QEA2
QEB2

##### Initialisation and interrupt #####

Depending on the operating mode, the QEI module generates interrupts for the following events:
* In Reset On Match mode (QEIM<2:0> = 111 and 101), an interrupt occurs on position counter rollover/underflow.
* In Reset On Index mode (QEIM<2:0> = 110 and 100), an interrupt occurs on detection of index pulse and optionally when the CNTERR bit (QEIxCON<15>) is set
* When operating as a timer/counter (QEIM<2:0> = 001), an interrupt occurs on a period match event or a timer-gate falling-edge event when TQGATE = 1
A QEI interrupt is enabled as a source of interrupt through the respective QEI Interrupt Enable bit (QEIxIE) in the IECx register. The interrupt priority level bits (QEIxIP<2:0>) in the IPCx register must be written with a non zero value for the timer to be a source of interrupt. For more information, refer to Section 6. “Interrupts” (DS70184).

We decided to go for a Match mode 111 where the interrupt occurs on a position counter overflow or underflow This is defined in the QEI interrupt. 

##### Calculating the angular position and speed #####
The encoders allows the actual velocity of the shaft (speed and direction of rotation) to be compared to the desired velocity and then used in a controller. 

Facts about the encoders: 16 pulses per motor rotations x 2 channels + 2 ups/downs (positive and negative edge) x 33motor rounds per wheel turns 
maxcount is 65.0000. High resolution, and it is worth it to be able to drive slowly. 

See more information and an example here: http://ww1.microchip.com/downloads/en/appnotes/93002a.pdf

